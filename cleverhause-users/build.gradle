plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'ru.cleverhause'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

configurations {
    compile {
        exclude group:'de.codecentric', module:'spring-boot-admin-starter-client'
        exclude group:'de.codecentric', module:'spring-boot-admin-client'
    }
}

ext {
    set('springBootAdminVersion', "2.2.1")
    set('springCloudVersion', "Hoxton.SR3")
    set('springSecurityVersion', "5.3.1.RELEASE")
    set('postgresql_version', '2.9')
    set('logback_version', '6.3')
    set('junit-jupiter.version', '5.5.1')
    set('springOauth2Version', "2.2.0.RELEASE")
    set('testcontainers_version', '1.15.0-rc2')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
    implementation "org.springframework.security.oauth:spring-security-oauth2:2.3.7.RELEASE"
    implementation 'de.codecentric:spring-boot-admin-starter-client'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Feign
    implementation("org.springframework.cloud:spring-cloud-starter-openfeign:2.1.3.RELEASE")

    // ELK
    implementation "net.logstash.logback:logstash-logback-encoder:${logback_version}"

    // DB
    implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'org.postgresql:postgresql'
    implementation "org.hibernate:hibernate-entitymanager"

    // CLOUD
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // LOMBOK
    compile 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //UTIL
    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    implementation 'org.mapstruct:mapstruct-processor:1.4.1.Final'
    implementation 'org.apache.commons:commons-lang3:3.10'
    compile ('com.google.guava:guava:29.0-jre') {
        exclude group:'com.google.guava', module:'guava:28.2-android'
    }

    // TEST
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testCompile("org.springframework.cloud:spring-cloud-contract-wiremock:2.1.2.RELEASE")
    testImplementation 'org.assertj:assertj-core'
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "org.junit.jupiter:junit-jupiter-params"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    testCompile "org.testcontainers:postgresql:${testcontainers_version}"
    testCompile "org.testcontainers:testcontainers:${testcontainers_version}"
    testCompile "org.testcontainers:junit-jupiter:${testcontainers_version}"
    testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.security:spring-security-bom:${springSecurityVersion}"
    }
}

test {
    useJUnitPlatform()
}
